Authorization Service
======================

The Authorization Microservice is a core component of the Administration Concession System. It handles authentication, authorization, and user management processes, which are essential for maintaining secure access and operational control. This microservice also integrates with the CRM system to share user data and operational events.

API Documentation
-----------------

Commands
--------

**UserLoginCommand**

- **Description**: Initiates the process of logging a user into the system.
- **Request URL**: `/api/auth/login`
- **Method**: `POST`
- **Request Body**:
  - `username` (string, required): The username of the user.
  - `password` (string, required): The password of the user.
- **Response**:
  - `token` (string): A JWT token for authenticated sessions.
  - `expiresIn` (int): Expiration time of the token in seconds.
- **Events Triggered**: `UserLoggedInEvent`

**UserLogoutCommand**

- **Description**: Initiates the process of logging a user out of the system.
- **Request URL**: `/api/auth/logout`
- **Method**: `POST`
- **Request Body**: None
- **Response**:
  - `message` (string): Confirmation message that the user has been logged out.
- **Events Triggered**: `UserLoggedOutEvent`

**ResetPasswordCommand**

- **Description**: Resets the password for a user's account.
- **Request URL**: `/api/auth/reset-password`
- **Method**: `POST`
- **Request Body**:
  - `email` (string, required): The email associated with the user's account.
- **Response**:
  - `message` (string): Confirmation that a password reset email has been sent.
- **Events Triggered**: `PasswordResetEvent`

**Enable2FACommand**

- **Description**: Enables Two-Factor Authentication (2FA) for a user's account.
- **Request URL**: `/api/auth/enable-2fa`
- **Method**: `POST`
- **Request Body**:
  - `userId` (string, required): The ID of the user enabling 2FA.
  - `token` (string, required): The 2FA token generated by the user's authenticator app.
- **Response**:
  - `message` (string): Confirmation that 2FA has been enabled.
- **Events Triggered**: `TwoFactorEnabledEvent`

**Disable2FACommand**

- **Description**: Disables Two-Factor Authentication (2FA) for a user's account.
- **Request URL**: `/api/auth/disable-2fa`
- **Method**: `POST`
- **Request Body**:
  - `userId` (string, required): The ID of the user disabling 2FA.
- **Response**:
  - `message` (string): Confirmation that 2FA has been disabled.
- **Events Triggered**: `TwoFactorDisabledEvent`

**VerifyEmailCommand**

- **Description**: Initiates the process of verifying a user's email address.
- **Request URL**: `/api/auth/verify-email`
- **Method**: `POST`
- **Request Body**:
  - `userId` (string, required): The ID of the user verifying their email.
  - `emailToken` (string, required): The token sent to the user's email.
- **Response**:
  - `message` (string): Confirmation that the email has been verified.
- **Events Triggered**: `EmailVerifiedEvent`, `EmailVerificationFailedEvent`

**RegisterConcessionCommand**

- **Description**: Registers a new concession within the system.
- **Request URL**: `/api/auth/register-concession`
- **Method**: `POST`
- **Request Body**:
  - `concessionName` (string, required): The name of the concession.
  - `adminEmail` (string, required): The email of the concession's administrator.
- **Response**:
  - `message` (string): Confirmation that the concession has been registered.
- **Events Triggered**: `ConcessionRegisteredEvent`

Queries
-------

**GetUserPermissionsQuery**

- **Description**: Retrieves the permissions associated with a user.
- **Request URL**: `/api/auth/get-user-permissions`
- **Method**: `GET`
- **Request Parameters**:
  - `userId` (string, required): The ID of the user whose permissions are being retrieved.
- **Response**:
  - `permissions` (array of strings): A list of permissions associated with the user.

**GetUserDetailsQuery**

- **Description**: Fetches the details of a specific user.
- **Request URL**: `/api/auth/get-user-details`
- **Method**: `GET`
- **Request Parameters**:
  - `userId` (string, required): The ID of the user whose details are being fetched.
- **Response**:
  - `userId` (string): The ID of the user.
  - `username` (string): The username of the user.
  - `email` (string): The email of the user.
  - `roles` (array of strings): A list of roles assigned to the user.

**Get2FAStatusQuery**

- **Description**: Retrieves the 2FA (Two-Factor Authentication) status of a user.
- **Request URL**: `/api/auth/get-2fa-status`
- **Method**: `GET`
- **Request Parameters**:
  - `userId` (string, required): The ID of the user whose 2FA status is being retrieved.
- **Response**:
  - `is2FAEnabled` (boolean): Indicates whether 2FA is enabled for the user.
